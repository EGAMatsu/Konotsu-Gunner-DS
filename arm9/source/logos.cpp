#include <nds.h>
#include "gl2d.h"
#include <maxmod9.h>

#include "graphics/graphics.h"

#include "logo_yellowlocker.h"
#include "logo_luolopi_chn.h"
#include "logo_rocketrobz.h"

extern bool wideScreen;
extern bool fadeType;
extern bool fadeColor;
extern int screenMode;

static bool inited = false;
static int waitTime = 0;

static int logoTexID;
static glImage logoImage[(256 / 32) * (192 / 32)];

void logoGraphicLoad(void) {
	logoTexID = glLoadTileSet(logoImage, // pointer to glImage array
							32, // sprite width
							32, // sprite height
							256, // bitmap width
							192, // bitmap height
							GL_RGB16, // texture type for glTexImage2D() in videoGL.h
							TEXTURE_SIZE_256, // sizeX for glTexImage2D() in videoGL.h
							TEXTURE_SIZE_256, // sizeY for glTexImage2D() in videoGL.h
							GL_TEXTURE_WRAP_S | GL_TEXTURE_WRAP_T | TEXGEN_OFF, // param for glTexImage2D() in videoGL.h
							16, // Length of the palette to use (16 colors)
						#ifdef CHN
							(u16*) logo_luolopi_chnPal, // Load our 16 color tiles palette
							(u8*) logo_luolopi_chnBitmap // image data generated by GRIT
						#else
							(u16*) logo_yellowlockerPal, // Load our 16 color tiles palette
							(u8*) logo_yellowlockerBitmap // image data generated by GRIT
						#endif
							);
}

void logoGraphicUnload(void) {
	glDeleteTextures(1, &logoTexID);
}

void logoScreen(void) {
	if (!inited) {
		logoGraphicLoad();
		decompress(logo_rocketrobzBitmap, bgGetGfxPtr(bg3), LZ77Vram);
		fadeType = true;
		inited = true;
	}

	if (waitTime == 60*3) {
		fadeColor = false;
		fadeType = false;
		while (!screenFadedOut());
		logoGraphicUnload();
		screenMode = 1;
	}
	waitTime++;
}

void renderLogo(void) {
	for (int x = 0; x < 8; x++) {
		for (int y = 0; y < 6; y++) {
			glSprite((x*32)+(wideScreen ? 22 : 0), y*32, GL_FLIP_NONE, &logoImage[(y*8)+x]);
		}
	}
}
